{"version":3,"file":"denylist.js","sourceRoot":"","sources":["../../../../../src/extensions/replay/external/denylist.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,SAAS,eAAe,CAAC,GAA+B;IACpD,IAAI,CAAC;QACD,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC1B,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAA;QAChC,CAAC;QACD,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC;YACf,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAA;QACpC,CAAC;QACD,OAAO,GAAG,CAAC,QAAQ,CAAA;IACvB,CAAC;IAAC,WAAM,CAAC;QACL,OAAO,IAAI,CAAA;IACf,CAAC;AACL,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAA2B,EAAE,OAA6B;;;IACvF,IAAM,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,CAAA;IACrC,IAAM,gBAAgB,GAAG,EAAE,QAAQ,UAAA,EAAE,YAAY,EAAE,KAAK,EAAE,CAAA;IAE1D,IAAI,CAAC,CAAA,MAAA,OAAO,CAAC,mBAAmB,0CAAE,MAAM,CAAA,IAAI,CAAC,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,GAAG,MAAM,CAAA,EAAE,CAAC;QACnE,OAAO,gBAAgB,CAAA;IAC3B,CAAC;;QAED,KAAmB,IAAA,KAAA,SAAA,OAAO,CAAC,mBAAmB,CAAA,gBAAA,4BAAE,CAAC;YAA5C,IAAM,IAAI,WAAA;YACX,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC1B,OAAO,EAAE,QAAQ,UAAA,EAAE,YAAY,EAAE,IAAI,EAAE,CAAA;YAC3C,CAAC;QACL,CAAC;;;;;;;;;IAED,OAAO,gBAAgB,CAAA;AAC3B,CAAC","sourcesContent":["import { NetworkRecordOptions } from '../../../types'\n\nfunction hostnameFromURL(url: string | URL | RequestInfo): string | null {\n    try {\n        if (typeof url === 'string') {\n            return new URL(url).hostname\n        }\n        if ('url' in url) {\n            return new URL(url.url).hostname\n        }\n        return url.hostname\n    } catch {\n        return null\n    }\n}\n\nexport function isHostOnDenyList(url: string | URL | Request, options: NetworkRecordOptions) {\n    const hostname = hostnameFromURL(url)\n    const defaultNotDenied = { hostname, isHostDenied: false }\n\n    if (!options.payloadHostDenyList?.length || !hostname?.trim().length) {\n        return defaultNotDenied\n    }\n\n    for (const deny of options.payloadHostDenyList) {\n        if (hostname.endsWith(deny)) {\n            return { hostname, isHostDenied: true }\n        }\n    }\n\n    return defaultNotDenied\n}\n"]}