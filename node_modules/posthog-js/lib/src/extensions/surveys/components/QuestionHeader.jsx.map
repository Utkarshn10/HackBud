{"version":3,"file":"QuestionHeader.jsx","sourceRoot":"","sources":["../../../../../src/extensions/surveys/components/QuestionHeader.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,uBAAuB,EAAE,0BAA0B,EAAE,MAAM,kBAAkB,CAAA;AACrG,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAA;AACpC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AAEzC,OAAO,EAAE,CAAC,EAAE,MAAM,QAAQ,CAAA;AAE1B,MAAM,UAAU,cAAc,CAAC,EAY9B;QAXG,QAAQ,cAAA,EACR,WAAW,iBAAA,EACX,sBAAsB,4BAAA,EACtB,eAAe,qBAAA,EACf,gBAAgB,sBAAA;IAQR,IAAA,OAAO,GAAK,UAAU,CAAC,aAAa,CAAC,QAA9B,CAA8B;IAC7C,OAAO,CACH,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,eAAe,IAAI,uBAAuB,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CACvG;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAChD;YAAA,CAAC,WAAW;YACR,0BAA0B,CAAC;gBACvB,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,6BAA6B,EAAE,CAAC;gBACjE,QAAQ,EAAE,WAAW;gBACrB,YAAY,EAAE,CAAC,gBAAgB,IAAI,sBAAsB,KAAK,MAAM;aACvE,CAAC,CACV;QAAA,EAAE,GAAG,CAAC,CACT,CAAA;AACL,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,EAAoC;QAAlC,OAAO,aAAA;IACpB,IAAA,aAAa,GAAK,UAAU,CAAC,aAAa,CAAC,cAA9B,CAA8B;IAEnD,OAAO,CACH,CAAC,GAAG,CAAC,SAAS,CAAC,oBAAoB,CAC/B;YAAA,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CACtE;gBAAA,CAAC,SAAS,CACd;YAAA,EAAE,MAAM,CACZ;QAAA,EAAE,GAAG,CAAC,CACT,CAAA;AACL,CAAC","sourcesContent":["import { SurveyContext, defaultSurveyAppearance, renderChildrenAsTextOrHtml } from '../surveys-utils'\nimport { cancelSVG } from '../icons'\nimport { useContext } from 'preact/hooks'\nimport { SurveyQuestionDescriptionContentType } from '../../../posthog-surveys-types'\nimport { h } from 'preact'\n\nexport function QuestionHeader({\n    question,\n    description,\n    descriptionContentType,\n    backgroundColor,\n    forceDisableHtml,\n}: {\n    question: string\n    description?: string | null\n    descriptionContentType?: SurveyQuestionDescriptionContentType\n    forceDisableHtml: boolean\n    backgroundColor?: string\n}) {\n    const { isPopup } = useContext(SurveyContext)\n    return (\n        <div style={isPopup ? { backgroundColor: backgroundColor || defaultSurveyAppearance.backgroundColor } : {}}>\n            <div className=\"survey-question\">{question}</div>\n            {description &&\n                renderChildrenAsTextOrHtml({\n                    component: h('div', { className: 'survey-question-description' }),\n                    children: description,\n                    renderAsHtml: !forceDisableHtml && descriptionContentType !== 'text',\n                })}\n        </div>\n    )\n}\n\nexport function Cancel({ onClick }: { onClick: () => void }) {\n    const { isPreviewMode } = useContext(SurveyContext)\n\n    return (\n        <div className=\"cancel-btn-wrapper\">\n            <button className=\"form-cancel\" onClick={onClick} disabled={isPreviewMode}>\n                {cancelSVG}\n            </button>\n        </div>\n    )\n}\n"]}