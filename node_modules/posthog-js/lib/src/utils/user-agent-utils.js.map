{"version":3,"file":"user-agent-utils.js","sourceRoot":"","sources":["../../../src/utils/user-agent-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { includes } from './index'\nimport { isFunction, isUndefined } from './type-utils'\n\n/**\n * this device detection code is (at time of writing) about 3% of the size of the entire library\n * this is mostly because the identifiers user in regexes and results can't be minified away since\n * they have meaning\n *\n * so, there are some pre-uglifying choices in the code to help reduce the size\n * e.g. many repeated strings are stored as variables and then old-fashioned concatenated together\n *\n * TL;DR here be dragons\n */\nconst FACEBOOK = 'Facebook'\nconst MOBILE = 'Mobile'\nconst IOS = 'iOS'\nconst ANDROID = 'Android'\nconst TABLET = 'Tablet'\nconst ANDROID_TABLET = ANDROID + ' ' + TABLET\nconst IPAD = 'iPad'\nconst APPLE = 'Apple'\nconst APPLE_WATCH = APPLE + ' Watch'\nconst SAFARI = 'Safari'\nconst BLACKBERRY = 'BlackBerry'\nconst SAMSUNG = 'Samsung'\nconst SAMSUNG_BROWSER = SAMSUNG + 'Browser'\nconst SAMSUNG_INTERNET = SAMSUNG + ' Internet'\nconst CHROME = 'Chrome'\nconst CHROME_OS = CHROME + ' OS'\nconst CHROME_IOS = CHROME + ' ' + IOS\nconst INTERNET_EXPLORER = 'Internet Explorer'\nconst INTERNET_EXPLORER_MOBILE = INTERNET_EXPLORER + ' ' + MOBILE\nconst OPERA = 'Opera'\nconst OPERA_MINI = OPERA + ' Mini'\nconst EDGE = 'Edge'\nconst MICROSOFT_EDGE = 'Microsoft ' + EDGE\nconst FIREFOX = 'Firefox'\nconst FIREFOX_IOS = FIREFOX + ' ' + IOS\nconst NINTENDO = 'Nintendo'\nconst PLAYSTATION = 'PlayStation'\nconst XBOX = 'Xbox'\nconst ANDROID_MOBILE = ANDROID + ' ' + MOBILE\nconst MOBILE_SAFARI = MOBILE + ' ' + SAFARI\nconst WINDOWS = 'Windows'\nconst WINDOWS_PHONE = WINDOWS + ' Phone'\nconst NOKIA = 'Nokia'\nconst OUYA = 'Ouya'\nconst GENERIC = 'Generic'\nconst GENERIC_MOBILE = GENERIC + ' ' + MOBILE.toLowerCase()\nconst GENERIC_TABLET = GENERIC + ' ' + TABLET.toLowerCase()\nconst KONQUEROR = 'Konqueror'\n\nconst BROWSER_VERSION_REGEX_SUFFIX = '(\\\\d+(\\\\.\\\\d+)?)'\nconst DEFAULT_BROWSER_VERSION_REGEX = new RegExp('Version/' + BROWSER_VERSION_REGEX_SUFFIX)\n\nconst XBOX_REGEX = new RegExp(XBOX, 'i')\nconst PLAYSTATION_REGEX = new RegExp(PLAYSTATION + ' \\\\w+', 'i')\nconst NINTENDO_REGEX = new RegExp(NINTENDO + ' \\\\w+', 'i')\nconst BLACKBERRY_REGEX = new RegExp(BLACKBERRY + '|PlayBook|BB10', 'i')\n\nconst windowsVersionMap: Record<string, string> = {\n    'NT3.51': 'NT 3.11',\n    'NT4.0': 'NT 4.0',\n    '5.0': '2000',\n    '5.1': 'XP',\n    '5.2': 'XP',\n    '6.0': 'Vista',\n    '6.1': '7',\n    '6.2': '8',\n    '6.3': '8.1',\n    '6.4': '10',\n    '10.0': '10',\n}\n\n/**\n * Safari detection turns out to be complicated. For e.g. https://stackoverflow.com/a/29696509\n * We can be slightly loose because some options have been ruled out (e.g. firefox on iOS)\n * before this check is made\n */\nfunction isSafari(userAgent: string): boolean {\n    return includes(userAgent, SAFARI) && !includes(userAgent, CHROME) && !includes(userAgent, ANDROID)\n}\n\nconst safariCheck = (ua: string, vendor?: string) => (vendor && includes(vendor, APPLE)) || isSafari(ua)\n\n/**\n * This function detects which browser is running this script.\n * The order of the checks are important since many user agents\n * include keywords used in later checks.\n */\nexport const detectBrowser = function (user_agent: string, vendor: string | undefined): string {\n    vendor = vendor || '' // vendor is undefined for at least IE9\n\n    if (includes(user_agent, ' OPR/') && includes(user_agent, 'Mini')) {\n        return OPERA_MINI\n    } else if (includes(user_agent, ' OPR/')) {\n        return OPERA\n    } else if (BLACKBERRY_REGEX.test(user_agent)) {\n        return BLACKBERRY\n    } else if (includes(user_agent, 'IE' + MOBILE) || includes(user_agent, 'WPDesktop')) {\n        return INTERNET_EXPLORER_MOBILE\n    }\n    // https://developer.samsung.com/internet/user-agent-string-format\n    else if (includes(user_agent, SAMSUNG_BROWSER)) {\n        return SAMSUNG_INTERNET\n    } else if (includes(user_agent, EDGE) || includes(user_agent, 'Edg/')) {\n        return MICROSOFT_EDGE\n    } else if (includes(user_agent, 'FBIOS')) {\n        return FACEBOOK + ' ' + MOBILE\n    } else if (includes(user_agent, 'UCWEB') || includes(user_agent, 'UCBrowser')) {\n        return 'UC Browser'\n    } else if (includes(user_agent, 'CriOS')) {\n        return CHROME_IOS // why not just Chrome?\n    } else if (includes(user_agent, 'CrMo')) {\n        return CHROME\n    } else if (includes(user_agent, ANDROID) && includes(user_agent, SAFARI)) {\n        return ANDROID_MOBILE\n    } else if (includes(user_agent, CHROME)) {\n        return CHROME\n    } else if (includes(user_agent, 'FxiOS')) {\n        return FIREFOX_IOS\n    } else if (includes(user_agent.toLowerCase(), KONQUEROR.toLowerCase())) {\n        return KONQUEROR\n    } else if (safariCheck(user_agent, vendor)) {\n        return includes(user_agent, MOBILE) ? MOBILE_SAFARI : SAFARI\n    } else if (includes(user_agent, FIREFOX)) {\n        return FIREFOX\n    } else if (includes(user_agent, 'MSIE') || includes(user_agent, 'Trident/')) {\n        return INTERNET_EXPLORER\n    } else if (includes(user_agent, 'Gecko')) {\n        return FIREFOX\n    }\n\n    return ''\n}\n\nconst versionRegexes: Record<string, RegExp[]> = {\n    [INTERNET_EXPLORER_MOBILE]: [new RegExp('rv:' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [MICROSOFT_EDGE]: [new RegExp(EDGE + '?\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [CHROME]: [new RegExp('(' + CHROME + '|CrMo)\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [CHROME_IOS]: [new RegExp('CriOS\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    'UC Browser': [new RegExp('(UCBrowser|UCWEB)\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [SAFARI]: [DEFAULT_BROWSER_VERSION_REGEX],\n    [MOBILE_SAFARI]: [DEFAULT_BROWSER_VERSION_REGEX],\n    [OPERA]: [new RegExp('(' + OPERA + '|OPR)\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [FIREFOX]: [new RegExp(FIREFOX + '\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [FIREFOX_IOS]: [new RegExp('FxiOS\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [KONQUEROR]: [new RegExp('Konqueror[:/]?' + BROWSER_VERSION_REGEX_SUFFIX, 'i')],\n    // not every blackberry user agent has the version after the name\n    [BLACKBERRY]: [new RegExp(BLACKBERRY + ' ' + BROWSER_VERSION_REGEX_SUFFIX), DEFAULT_BROWSER_VERSION_REGEX],\n    [ANDROID_MOBILE]: [new RegExp('android\\\\s' + BROWSER_VERSION_REGEX_SUFFIX, 'i')],\n    [SAMSUNG_INTERNET]: [new RegExp(SAMSUNG_BROWSER + '\\\\/' + BROWSER_VERSION_REGEX_SUFFIX)],\n    [INTERNET_EXPLORER]: [new RegExp('(rv:|MSIE )' + BROWSER_VERSION_REGEX_SUFFIX)],\n    Mozilla: [new RegExp('rv:' + BROWSER_VERSION_REGEX_SUFFIX)],\n}\n\n/**\n * This function detects which browser version is running this script,\n * parsing major and minor version (e.g., 42.1). User agent strings from:\n * http://www.useragentstring.com/pages/useragentstring.php\n *\n * `navigator.vendor` is passed in and used to help with detecting certain browsers\n * NB `navigator.vendor` is deprecated and not present in every browser\n */\nexport const detectBrowserVersion = function (userAgent: string, vendor: string | undefined): number | null {\n    const browser = detectBrowser(userAgent, vendor)\n    const regexes: RegExp[] | undefined = versionRegexes[browser as keyof typeof versionRegexes]\n    if (isUndefined(regexes)) {\n        return null\n    }\n\n    for (let i = 0; i < regexes.length; i++) {\n        const regex = regexes[i]\n        const matches = userAgent.match(regex)\n        if (matches) {\n            return parseFloat(matches[matches.length - 2])\n        }\n    }\n    return null\n}\n\n// to avoid repeating regexes or calling them twice, we have an array of matches\n// the first regex that matches uses its matcher function to return the result\nconst osMatchers: [\n    RegExp,\n    [string, string] | ((match: RegExpMatchArray | null, user_agent: string) => [string, string])\n][] = [\n    [\n        new RegExp(XBOX + '; ' + XBOX + ' (.*?)[);]', 'i'),\n        (match) => {\n            return [XBOX, (match && match[1]) || '']\n        },\n    ],\n    [new RegExp(NINTENDO, 'i'), [NINTENDO, '']],\n    [new RegExp(PLAYSTATION, 'i'), [PLAYSTATION, '']],\n    [BLACKBERRY_REGEX, [BLACKBERRY, '']],\n    [\n        new RegExp(WINDOWS, 'i'),\n        (_, user_agent) => {\n            if (/Phone/.test(user_agent) || /WPDesktop/.test(user_agent)) {\n                return [WINDOWS_PHONE, '']\n            }\n            // not all JS versions support negative lookbehind, so we need two checks here\n            if (new RegExp(MOBILE).test(user_agent) && !/IEMobile\\b/.test(user_agent)) {\n                return [WINDOWS + ' ' + MOBILE, '']\n            }\n            const match = /Windows NT ([0-9.]+)/i.exec(user_agent)\n            if (match && match[1]) {\n                const version = match[1]\n                let osVersion = windowsVersionMap[version] || ''\n                if (/arm/i.test(user_agent)) {\n                    osVersion = 'RT'\n                }\n                return [WINDOWS, osVersion]\n            }\n            return [WINDOWS, '']\n        },\n    ],\n    [\n        /((iPhone|iPad|iPod).*?OS (\\d+)_(\\d+)_?(\\d+)?|iPhone)/,\n        (match) => {\n            if (match && match[3]) {\n                const versionParts = [match[3], match[4], match[5] || '0']\n                return [IOS, versionParts.join('.')]\n            }\n            return [IOS, '']\n        },\n    ],\n    [\n        /(watch.*\\/(\\d+\\.\\d+\\.\\d+)|watch os,(\\d+\\.\\d+),)/i,\n        (match) => {\n            // e.g. Watch4,3/5.3.8 (16U680)\n            let version = ''\n            if (match && match.length >= 3) {\n                version = isUndefined(match[2]) ? match[3] : match[2]\n            }\n            return ['watchOS', version]\n        },\n    ],\n    [\n        new RegExp('(' + ANDROID + ' (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?|' + ANDROID + ')', 'i'),\n        (match) => {\n            if (match && match[2]) {\n                const versionParts = [match[2], match[3], match[4] || '0']\n                return [ANDROID, versionParts.join('.')]\n            }\n            return [ANDROID, '']\n        },\n    ],\n    [\n        /Mac OS X (\\d+)[_.](\\d+)[_.]?(\\d+)?/i,\n        (match) => {\n            const result: [string, string] = ['Mac OS X', '']\n            if (match && match[1]) {\n                const versionParts = [match[1], match[2], match[3] || '0']\n                result[1] = versionParts.join('.')\n            }\n            return result\n        },\n    ],\n    [\n        /Mac/i,\n        // mop up a few non-standard UAs that should match mac\n        ['Mac OS X', ''],\n    ],\n    [/CrOS/, [CHROME_OS, '']],\n    [/Linux|debian/i, ['Linux', '']],\n]\n\nexport const detectOS = function (user_agent: string): [string, string] {\n    for (let i = 0; i < osMatchers.length; i++) {\n        const [rgex, resultOrFn] = osMatchers[i]\n        const match = rgex.exec(user_agent)\n        const result = match && (isFunction(resultOrFn) ? resultOrFn(match, user_agent) : resultOrFn)\n        if (result) {\n            return result\n        }\n    }\n    return ['', '']\n}\n\nexport const detectDevice = function (user_agent: string): string {\n    if (NINTENDO_REGEX.test(user_agent)) {\n        return NINTENDO\n    } else if (PLAYSTATION_REGEX.test(user_agent)) {\n        return PLAYSTATION\n    } else if (XBOX_REGEX.test(user_agent)) {\n        return XBOX\n    } else if (new RegExp(OUYA, 'i').test(user_agent)) {\n        return OUYA\n    } else if (new RegExp('(' + WINDOWS_PHONE + '|WPDesktop)', 'i').test(user_agent)) {\n        return WINDOWS_PHONE\n    } else if (/iPad/.test(user_agent)) {\n        return IPAD\n    } else if (/iPod/.test(user_agent)) {\n        return 'iPod Touch'\n    } else if (/iPhone/.test(user_agent)) {\n        return 'iPhone'\n    } else if (/(watch)(?: ?os[,/]|\\d,\\d\\/)[\\d.]+/i.test(user_agent)) {\n        return APPLE_WATCH\n    } else if (BLACKBERRY_REGEX.test(user_agent)) {\n        return BLACKBERRY\n    } else if (/(kobo)\\s(ereader|touch)/i.test(user_agent)) {\n        return 'Kobo'\n    } else if (new RegExp(NOKIA, 'i').test(user_agent)) {\n        return NOKIA\n    } else if (\n        // Kindle Fire without Silk / Echo Show\n        /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i.test(user_agent) ||\n        // Kindle Fire HD\n        /(kf[a-z]+)( bui|\\)).+silk\\//i.test(user_agent)\n    ) {\n        return 'Kindle Fire'\n    } else if (/(Android|ZTE)/i.test(user_agent)) {\n        if (\n            !new RegExp(MOBILE).test(user_agent) ||\n            /(9138B|TB782B|Nexus [97]|pixel c|HUAWEISHT|BTV|noble nook|smart ultra 6)/i.test(user_agent)\n        ) {\n            if (\n                (/pixel[\\daxl ]{1,6}/i.test(user_agent) && !/pixel c/i.test(user_agent)) ||\n                /(huaweimed-al00|tah-|APA|SM-G92|i980|zte|U304AA)/i.test(user_agent) ||\n                (/lmy47v/i.test(user_agent) && !/QTAQZ3/i.test(user_agent))\n            ) {\n                return ANDROID\n            }\n            return ANDROID_TABLET\n        } else {\n            return ANDROID\n        }\n    } else if (new RegExp('(pda|' + MOBILE + ')', 'i').test(user_agent)) {\n        return GENERIC_MOBILE\n    } else if (new RegExp(TABLET, 'i').test(user_agent) && !new RegExp(TABLET + ' pc', 'i').test(user_agent)) {\n        return GENERIC_TABLET\n    } else {\n        return ''\n    }\n}\n\nexport const detectDeviceType = function (user_agent: string): string {\n    const device = detectDevice(user_agent)\n    if (\n        device === IPAD ||\n        device === ANDROID_TABLET ||\n        device === 'Kobo' ||\n        device === 'Kindle Fire' ||\n        device === GENERIC_TABLET\n    ) {\n        return TABLET\n    } else if (device === NINTENDO || device === XBOX || device === PLAYSTATION || device === OUYA) {\n        return 'Console'\n    } else if (device === APPLE_WATCH) {\n        return 'Wearable'\n    } else if (device) {\n        return MOBILE\n    } else {\n        return 'Desktop'\n    }\n}\n"]}